name: Lint Code Base

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  cspell:
    name: cspell
    strategy:
      fail-fast: true
      matrix:
        node-version: [12.x]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2.3.1
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install
        run: yarn install --ignore-scripts
      - name: Setup reviewdog
        run: |
          mkdir -p $HOME/bin 
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $HOME/bin v$REVIEWDOG_VERSION
          echo ::add-path::$HOME/bin
          echo ::add-path::$(go env GOPATH)/bin # for Go projects
        env:
          REVIEWDOG_VERSION: "0.10.2"
      - name: Run reviewdog
        run: |
          reviewdog -fail-on-error -reporter=github-pr-check -runners=cspell
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2.3.1

      - name: Lint Code Base
        uses: docker://github/super-linter:v3
        env:
          DEFAULT_BRANCH: master
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_JAVASCRIPT_STANDARD: false
